cross-shell uses black magic to run binaries from host architecture on rootfs
prepared for target one. This patch removes the dpkg assumption that the build
architecture is the runtime one.

--- a/src/main.c
+++ b/src/main.c
@@ -160,7 +160,7 @@
 }
 
 const char thisname[]= "dpkg";
-const char architecture[]= ARCHITECTURE;
+char *architecture;
 const char printforhelp[]= N_(
 "Type dpkg --help for help about installing and deinstalling packages [*];\n"
 "Use `dselect' or `aptitude' for user-friendly package management;\n"
@@ -603,6 +603,9 @@
   unsigned long infd;
   int c, lno, i, skipchar;
   static void (*actionfunction)(const char *const *argv);
+  char *cross_shell_arch = getenv("CROSS_SHELL_ARCH");
+
+  architecture = strdup(cross_shell_arch ? cross_shell_arch : ARCHITECTURE);
 
   pipein = *argv++;
   if (pipein == NULL)
--- a/src/main.h
+++ b/src/main.h
@@ -128,7 +128,7 @@
 extern const char *admindir;
 extern const char *instdir;
 extern struct pkg_list *ignoredependss;
-extern const char architecture[];
+extern const char *architecture;
 
 struct invoke_hook {
 	struct invoke_hook *next;
